{
  "version": 3,
  "sources": [
    "unknown"
  ],
  "names": [],
  "mappings": "AAAA,EAAE,CAAC,KAAK,CAAC;AACL,eAAS,EAAE,CAAC,SAAS;;AAErB,cAAU,EAAE;;;;;;;;;;;AAWR,6BAAqB,EAAE,EAAE,CAAC,IAAI;KACjC;;;AAGD,UAAM,EAAE,kBAAY;AAChB,YAAI,CAAC,eAAe,GAAG,MAAM,CAAC,mBAAmB,CAAC,eAAe,CAAC,SAAS,CAAC,gBAAgB,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;KAC5H;;AAED,aAAS,EAAE,qBAAY;AACnB,cAAM,CAAC,mBAAmB,CAAC,kBAAkB,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;AACpE,YAAI,CAAC,eAAe,GAAG,IAAI,CAAC;KAC/B;;AAED,aAAS,EAAE,mBAAU,SAAS,EAAE,OAAO,EAAE;AACrC,UAAE,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;AAChB,YAAI,IAAI,GAAG,IAAI,EAAE,CAAC,IAAI,EAAA,CAAC;;AAEvB,YAAI,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC;AACxC,aAAK,CAAC,MAAM,GAAG,OAAO,CAAC;;AAEvB,YAAI,MAAM,GAAG,IAAI,EAAE,CAAC,QAAQ,CACxB,IAAI,EAAE,CAAC,KAAK,CACR,IAAI,EAAE,CAAC,MAAM,CAAC,CAAC,EAAE,IAAI,EAAE,CAAC,IAAI,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EACrC,IAAI,EAAE,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,EACtB,IAAI,EAAE,CAAC,QAAQ,CAAC,YAAY;AACxB,gBAAI,CAAC,OAAO,EAAE,CAAC;SAClB,CAAC,CAAC,CAAC;;AAER,YAAI,CAAC,MAAM,GAAG,IAAI,CAAC,qBAAqB,CAAC;AACzC,YAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;KAC1B;;CAMJ,CAAC,CAAC",
  "file": "unknown",
  "sourcesContent": [
    "cc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // foo: {\r\n        //    default: null,      // The default value will be used only when the component attaching\r\n        //                           to a node for the first time\r\n        //    url: cc.Texture2D,  // optional, default is typeof default\r\n        //    serializable: true, // optional, default is true\r\n        //    visible: true,      // optional, default is true\r\n        //    displayName: 'Foo', // optional\r\n        //    readonly: false,    // optional, default is false\r\n        // },\r\n        // ...\r\n        floatMessageContainer: cc.Node,\r\n    },\r\n\r\n    // use this for initialization\r\n    onLoad: function () {\r\n        this._messageHandler = Global.gameEventDispatcher.addEventHandler(GameEvent.ON_FLOAT_MESSAGE, this.onMessage.bind(this));\r\n    },\r\n\r\n    onDestroy: function () {\r\n        Global.gameEventDispatcher.removeEventHandler(this._messageHandler);\r\n        this._messageHandler = null;\r\n    },\r\n    \r\n    onMessage: function (eventType, message) {\r\n        cc.log(message);\r\n        var node = new cc.Node;\r\n        \r\n        var label = node.addComponent(cc.Label);\r\n        label.string = message;\r\n        \r\n        var action = new cc.Sequence(\r\n            new cc.Spawn(\r\n                new cc.MoveBy(1, new cc.Vec2(0, 100)),\r\n                new cc.FadeOut(1)),\r\n            new cc.CallFunc(function () {\r\n                node.destroy();\r\n            }));\r\n            \r\n        node.parent = this.floatMessageContainer;\r\n        node.runAction(action);\r\n    },\r\n\r\n    // called every frame, uncomment this function to activate update callback\r\n    // update: function (dt) {\r\n\r\n    // },\r\n});\r\n"
  ]
}
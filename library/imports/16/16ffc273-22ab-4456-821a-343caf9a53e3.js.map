{
  "version": 3,
  "sources": [
    "unknown"
  ],
  "names": [],
  "mappings": "AAAA,IAAM,cAAc,GAAG,OAAO,CAAC,iBAAiB,CAAC,SAAM,CAAA;AACvD,IAAM,QAAQ,GAAG,OAAO,CAAC,WAAW,CAAC,CAAA;AACrC,IAAM,YAAY,GAAG,OAAO,CAAC,eAAe,CAAC,CAAA;;AAE7C,MAAM,CAAC,OAAO,SAAM,GAAG,EAAE,CAAC,KAAK,CAAC;;AAE5B,QAAI,EAAE,gBAAY;AACd,YAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;AAC7B,YAAI,CAAC,aAAa,GAAG,EAAE,CAAC;AACxB,YAAI,CAAC,eAAe,GAAG,IAAI,cAAc,EAAE,CAAC;AAC5C,YAAI,CAAC,eAAe,CAAC,aAAa,CAAC,oBAAoB,CAAC,CAAC;AACzD,YAAI,CAAC,eAAe,CAAC,kBAAkB,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;KACxE;;AAED,oBAAgB,EAAE,4BAAY;AAC1B,YAAI,CAAC,IAAI,CAAC,gBAAgB,EACtB,OAAO;AACX,YAAI,CAAC,WAAW,CAAC,IAAI,CAAC,gBAAgB,CAAC,IAAI,EAAE,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC;KAChF;;AAED,eAAW,EAAE,qBAAU,IAAI,EAAE,QAAQ,EAAE;AACnC,cAAM,CAAC,mBAAmB,CAAC,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC,CAAC;AAC3D,YAAI,IAAI,GAAG,IAAI,CAAC;AAChB,YAAI,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC;AAChC,YAAI,GAAG,GAAG,YAAY,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;AACxC,YAAI,CAAC,sBAAsB,CAAC,UAAU,EAAE,UAAU,IAAI,EAAE;AAC1D,gBAAI,CAAC,yBAAyB,CAAC,UAAU,CAAC,CAAA;AAC1C,gBAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;AAC7B,gBAAI,OAAO,QAAQ,AAAC,KAAK,UAAU,EAClC,QAAQ,CAAC,IAAI,CAAC,CAAA;SACf,CAAC,CAAC;AACH,YAAI,CAAC,gBAAgB,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,QAAQ,EAAE,QAAQ,EAAE,CAAA;AAC1D,YAAI,CAAC,eAAe,CAAC,OAAO,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;KACxC;;AAED,eAAW,EAAE,qBAAU,KAAK,EAAE,IAAI,EAAE;AAChC,cAAM,CAAC,mBAAmB,CAAC,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC,CAAC;AAC3D,YAAI,KAAK,IAAI,QAAQ,CAAC,KAAK,CAAC,EAAE,EAAE;AAC5B,gBAAI,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;AACtD,mBAAO,IAAI,OAAO,CAAC,IAAI,CAAC,CAAC;SAC5B,MAAM;AACH,kBAAM,CAAC,mBAAmB,CAAC,IAAI,CAAC,SAAS,CAAC,gBAAgB,CAAC,CAAC;AAC5D,gBAAI,CAAC,yBAAyB,CAAC,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAA;SACvE;KACJ;;AAED,0BAAsB,EAAE,gCAAU,UAAU,EAAE,OAAO,EAAE;AACnD,YAAI,CAAC,aAAa,CAAC,UAAU,CAAC,GAAG,OAAO,CAAC;KAC5C;;AAED,6BAAyB,EAAE,mCAAU,UAAU,EAAE,OAAO,EAAE;AACtD,YAAI,CAAC,aAAa,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC;KACzC;;CAEJ,CAAC,CAAC",
  "file": "unknown",
  "sourcesContent": [
    "const HttpConnection = require('http_connection').class\r\nconst HttpUtil = require('http_util')\r\nconst GameProtocol = require('game_protocol')\r\n\r\nmodule.exports.class = cc.Class({\r\n\r\n    ctor: function () {\r\n        this._httpReauestInfo = null;\r\n        this._httpHandlers = {};\r\n        this._httpConnection = new HttpConnection();\r\n        this._httpConnection.setCipherCode('fwe^*&3ijcdhf45543');\r\n        this._httpConnection.setRespondCallback(this.httpRespond.bind(this));\r\n    },\r\n    \r\n    retryHttpRequest: function () {\r\n        if (!this._httpReauestInfo)\r\n            return;\r\n        this.httpRequest(this._httpReauestInfo.data, this._httpReauestInfo.callback);\r\n    },\r\n    \r\n    httpRequest: function (data, callback) {\r\n        Global.gameEventDispatcher.emit(GameEvent.ON_HTTP_REQUEST);\r\n        var self = this;\r\n        var protocolId = data.gameMsgId;\r\n        var url = GameProtocol.URLs[protocolId];\r\n        this.addHttpRespondListener(protocolId, function (json) {\r\n    \t\tself.removeHttpRespondListener(protocolId)\r\n    \t\tself._httpReauestInfo = null;\r\n    \t\tif (typeof(callback) === \"function\")\r\n    \t\t\tcallback(json)\r\n    \t});\r\n    \tthis._httpReauestInfo = { data: data, callback: callback }\r\n    \tthis._httpConnection.request(url, data);\r\n    },\r\n    \r\n    httpRespond: function (stats, json) {\r\n        Global.gameEventDispatcher.emit(GameEvent.ON_HTTP_RESPOND);\r\n        if (stats == HttpUtil.Stats.OK) {\r\n            var handler = this._httpHandlers[json.data.gameMsgId];\r\n            handler && handler(json);\r\n        } else {\r\n            Global.gameEventDispatcher.emit(GameEvent.ON_NETWORK_ERROR);\r\n            this.removeHttpRespondListener(this._httpReauestInfo.data.gameMsgId)\r\n        }\r\n    },\r\n    \r\n    addHttpRespondListener: function (protocolId, handler) {\r\n        this._httpHandlers[protocolId] = handler;\r\n    },\r\n    \r\n    removeHttpRespondListener: function (protocolId, handler) {\r\n        this._httpHandlers[protocolId] = null;\r\n    },\r\n    \r\n});\r\n"
  ]
}
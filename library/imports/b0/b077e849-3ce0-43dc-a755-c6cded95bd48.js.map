{
  "version": 3,
  "sources": [
    "unknown"
  ],
  "names": [],
  "mappings": "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",
  "file": "unknown",
  "sourcesContent": [
    "const GameProtocol = require(\"game_protocol\");\r\n\r\nvar Srv2Clt = {\r\n    retLogin: function (json) {\r\n        cc.log(\"retLogin:\" + json.data.errorMsg);\r\n        if (json.code === 1)\r\n            Global.loginModule.token = json.data.token;\r\n        Global.gameEventDispatcher.emit(GameEvent.ON_LOGIN_RESULT, json);\r\n    },\r\n    \r\n    retGetGameData: function (json) {\r\n        cc.log(\"retGetGameData:\" + json.data.errorMsg);\r\n        if (json.code === 1) {\r\n\t        Global.accountModule.isVip = json.data.isVIP;\r\n\t        Global.accountModule.goldNum = json.data.goldNum;\r\n\t        Global.accountModule.scoreNum = json.data.scoreNum;\r\n\t        Global.accountModule.nickName = json.data.nikename;\r\n\t        Global.accountModule.isFirstLogin = json.data.isFirst;\r\n\t        Global.accountModule.maxScore = json.data.maxScore;\r\n\t        Global.accountModule.power = json.data.power;\r\n\t        Global.accountModule.nextPowerTime = json.data.nextPowerTime;\r\n\t        Global.accountModule.exchangeRate = json.data.oneIntegralGoldNum;\r\n\t\t\tGlobal.gameEventDispatcher.emit(GameEvent.ON_GET_GAME_DATA);\r\n\t\t}\r\n    },\r\n    \r\n    retExchangeGold: function (json) {\r\n        cc.log(\"retExchangeGold:\" + json.data.errorMsg);\r\n        if (json.code === 1) {\r\n            Global.accountModule.goldNum = json.data.goldNum;\r\n\t        Global.accountModule.scoreNum = json.data.scoreNum;\r\n\t        Global.gameEventDispatcher.emit(GameEvent.ON_EXCHANGE_GOLD);\r\n            Global.gameEventDispatcher.emit(GameEvent.ON_FLOAT_MESSAGE, GameLang.t('exchange_success'));\r\n        } else {\r\n            Global.gameEventDispatcher.emit(GameEvent.ON_FLOAT_MESSAGE, json.data.errorMsg);\r\n        }\r\n    },\r\n    \r\n    retStartGame: function (json) {\r\n        cc.log(\"retStartGame:\" + json.data.errorMsg);\r\n        if (json.code === 1) {\r\n            Global.accountModule.maxScore = json.data.maxScore;\r\n\t        Global.accountModule.power = json.data.power;\r\n\t        Global.accountModule.nextPowerTime = json.data.nextPowerTime;\r\n\t        Global.gameEventDispatcher.emit(GameEvent.ON_START_GAME);\r\n        } else {\r\n            Global.gameEventDispatcher.emit(GameEvent.ON_FLOAT_MESSAGE, json.data.errorMsg);\r\n        }\r\n    },\r\n    \r\n    retBuyFullPhysical: function (json) {\r\n        cc.log(\"retBuyFullPhysical:\" + json.data.errorMsg);\r\n        if (json.code === 1) {\r\n            Global.accountModule.goldNum = json.data.goldNum;\r\n\t        Global.accountModule.power = json.data.power;\r\n\t        Global.accountModule.nextPowerTime = json.data.nextPowerTime;\r\n\t        Global.gameEventDispatcher.emit(GameEvent.ON_BUY_PHYSICAL);\r\n            Global.gameEventDispatcher.emit(GameEvent.ON_FLOAT_MESSAGE, GameLang.t('buy_physical_success'));\r\n        } else {\r\n            Global.gameEventDispatcher.emit(GameEvent.ON_FLOAT_MESSAGE, json.data.errorMsg);\r\n        }\r\n    },\r\n    \r\n    retBuyTimeToPlayGame: function (json) {\r\n        cc.log(\"retBuyTimeToPlayGame:\" + json.data.errorMsg);\r\n        if (json.code === 1) {\r\n            Global.accountModule.goldNum = json.data.goldNum;\r\n\t        Global.gameEventDispatcher.emit(GameEvent.ON_BUY_TIME_TO_PLAY);\r\n        } else {\r\n            Global.gameEventDispatcher.emit(GameEvent.ON_FLOAT_MESSAGE, json.data.errorMsg);\r\n        }\r\n    },\r\n    \r\n    retGameResult: function (json) {\r\n        cc.log(\"retGameResult:\" + json.data.errorMsg);\r\n        if (json.code === 1) {\r\n            Global.accountModule.maxScore = json.data.maxScore;\r\n\t        Global.gameEventDispatcher.emit(GameEvent.ON_GAME_RESULT);\r\n        } else {\r\n            Global.gameEventDispatcher.emit(GameEvent.ON_FLOAT_MESSAGE, json.data.errorMsg);\r\n        }\r\n    },\r\n}\r\nmodule.exports.Srv2Clt = Srv2Clt;\r\n\r\nvar Clt2Srv = {\r\n    login: function (account, passwd) {\r\n        Global.gameNet.httpRequest({\r\n            type: Global.gameType,\r\n            gameMsgId: GameProtocol.Protocol.LOGIN,\r\n            account: account,\r\n            password: passwd,\r\n        }, Srv2Clt.retLogin);\r\n    },\r\n    \r\n    getGameData: function () {\r\n\t\tGlobal.gameNet.httpRequest({\r\n\t\t    type: Global.gameType,\r\n\t\t\tgameMsgId: GameProtocol.Protocol.GET_DATA,\r\n\t\t\ttoken: Global.loginModule.token,\r\n\t\t}, Srv2Clt.retGetGameData);\r\n    },\r\n    \r\n    exchangeGold: function (gold) {\r\n\t\tGlobal.gameNet.httpRequest({\r\n\t\t    type: Global.gameType,\r\n\t\t\tgameMsgId: GameProtocol.Protocol.EXCHANGE_GOLD,\r\n\t\t\ttoken: Global.loginModule.token,\r\n\t\t\tneedGold: gold,\r\n\t\t}, Srv2Clt.retExchangeGold);\r\n    },\r\n    \r\n    startGame: function () {\r\n\t\tGlobal.gameNet.httpRequest({\r\n\t\t    type: Global.gameType,\r\n\t\t\tgameMsgId: GameProtocol.Protocol.START_GAME,\r\n\t\t\ttoken: Global.loginModule.token,\r\n\t\t}, Srv2Clt.retStartGame);\r\n    },\r\n    \r\n    buyFullPhysical: function () {\r\n\t\tGlobal.gameNet.httpRequest({\r\n\t\t    type: Global.gameType,\r\n\t\t\tgameMsgId: GameProtocol.Protocol.FULL_POWER,\r\n\t\t\ttoken: Global.loginModule.token,\r\n\t\t}, Srv2Clt.retBuyFullPhysical);\r\n    },\r\n    \r\n    buyTimeToPlayGame: function (times) {\r\n        cc.log('buyTimeToPlayGame', times);\r\n\t\tGlobal.gameNet.httpRequest({\r\n\t\t    type: Global.gameType,\r\n\t\t\tgameMsgId: GameProtocol.Protocol.CONTINUE_GAME,\r\n\t\t\ttoken: Global.loginModule.token,\r\n\t\t\tlevel: times,\r\n\t\t}, Srv2Clt.retBuyTimeToPlayGame);\r\n    },\r\n    \r\n    gameResult: function (score) {\r\n\t\tGlobal.gameNet.httpRequest({\r\n\t\t    type: Global.gameType,\r\n\t\t\tgameMsgId: GameProtocol.Protocol.CONTINUE_GAME,\r\n\t\t\ttoken: Global.loginModule.token,\r\n\t\t\tscore: score,\r\n\t\t}, Srv2Clt.retGameResult);\r\n    },\r\n}\r\nmodule.exports.Clt2Srv = Clt2Srv;\r\n"
  ]
}
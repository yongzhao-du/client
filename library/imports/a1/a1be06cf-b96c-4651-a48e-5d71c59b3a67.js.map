{
  "version": 3,
  "sources": [
    "unknown"
  ],
  "names": [],
  "mappings": "AAAA,EAAE,CAAC,KAAK,CAAC;AACL,eAAS,EAAE,CAAC,SAAS;;AAErB,cAAU,EAAE;AACR,eAAO,EAAE;AACL,uBAAS,IAAI;AACb,gBAAI,EAAE,EAAE,CAAC,IAAI;SAChB;;AAED,eAAO,EAAE;AACL,uBAAS,IAAI;AACb,gBAAI,EAAE,EAAE,CAAC,IAAI;SAChB;;AAED,iBAAS,EAAE;AACP,uBAAS,IAAI;AACb,gBAAI,EAAE,EAAE,CAAC,KAAK;SACjB;;AAED,gBAAQ,EAAE,CAAC;KACd;;;AAGD,UAAM,EAAE,kBAAY;AAChB,YAAI,CAAC,KAAK,GAAG,CAAC,CAAC;AACf,YAAI,CAAC,UAAU,GAAG,CAAC,CAAC;AACpB,YAAI,CAAC,WAAW,GAAG,CAAC,CAAC;AACrB,YAAI,CAAC,YAAY,GAAG,CAAC,CAAC;AACtB,YAAI,CAAC,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC;KACvC;;AAED,WAAO,EAAE,iBAAU,IAAI,EAAE;AACrB,YAAI,CAAC,SAAS,CAAC,MAAM,GAAG,IAAI,CAAC;KAChC;;AAED,SAAK,EAAE,eAAU,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE;AAC3B,YAAI,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC;AACnB,YAAI,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC;AACrB,YAAI,OAAO,GAAG,EAAE,GAAG,GAAG,CAAC;AACvB,YAAI,KAAK,GAAG,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC;AACrC,YAAI,CAAC,GAAG,EAAE;AACN,gBAAI,CAAC,OAAO,CAAC,KAAK,GAAG,KAAK,CAAC;AAC3B,gBAAI,CAAC,OAAO,CAAC,KAAK,GAAG,KAAK,CAAC;SAC9B,MAAM;AACH,gBAAI,CAAC,OAAO,CAAC,KAAK,GAAG,KAAK,CAAC;AAC3B,gBAAI,CAAC,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC;AACtC,gBAAI,CAAC,YAAY,GAAG,KAAK,CAAC;AAC1B,gBAAI,CAAC,KAAK,GAAG,IAAI,CAAC,UAAU,GAAG,CAAC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,YAAY,CAAA,GAAI,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAA;SACzG;KACJ;;;AAGD,UAAM,EAAE,gBAAU,EAAE,EAAE;AAClB,YAAI,IAAI,CAAC,UAAU,GAAG,CAAC,EAAE;AACrB,gBAAI,CAAC,UAAU,IAAI,EAAE,CAAC;AACtB,gBAAI,IAAI,CAAC,UAAU,IAAI,CAAC,EAAE;AACtB,oBAAI,CAAC,UAAU,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;AACjC,oBAAI,CAAC,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC;aAC1C,MAAM;AACH,oBAAI,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC;AACrC,oBAAI,CAAC,GAAG,IAAI,CAAC,SAAS,GAAG,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC;AAC3C,oBAAI,CAAC,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;aAC7C;SACJ;KACJ;CACJ,CAAC,CAAC",
  "file": "unknown",
  "sourcesContent": [
    "cc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        hpAlpha: {\r\n            default: null,\r\n            type: cc.Node,\r\n        },\r\n        \r\n        hpLight: {\r\n            default: null,\r\n            type: cc.Node,\r\n        },\r\n        \r\n        nameLabel: {\r\n            default: null,\r\n            type: cc.Label,\r\n        },\r\n        \r\n        moveTime: 3,\r\n    },\r\n\r\n    // use this for initialization\r\n    onLoad: function () {\r\n        this._time = 0;\r\n        this._delayTime = 0;\r\n        this._startWidth = 0;\r\n        this._targetWidth = 0;\r\n        this._maxWidth = this.hpLight.width;\r\n    },\r\n    \r\n    setName: function (name) {\r\n        this.nameLabel.string = name;\r\n    },\r\n    \r\n    setHp: function (hp, max, ani) {\r\n        if (hp < 0) hp = 0;\r\n        if (max < 1) max = 1;\r\n        var percent = hp / max;\r\n        var width = percent * this._maxWidth;\r\n        if (!ani) {\r\n            this.hpAlpha.width = width;\r\n            this.hpLight.width = width;\r\n        } else {\r\n            this.hpLight.width = width;\r\n            this._startWidth = this.hpAlpha.width;\r\n            this._targetWidth = width;\r\n            this._time = this._delayTime = (this._startWidth - this._targetWidth) / this._maxWidth * this.moveTime\r\n        }\r\n    },\r\n\r\n    // called every frame, uncomment this function to activate update callback\r\n    update: function (dt) {\r\n        if (this._delayTime > 0) {\r\n            this._delayTime -= dt;\r\n            if (this._delayTime <= 0) {\r\n                this._delayTime = this._time = 0;\r\n                this.hpLight.width = this._targetWidth;\r\n            } else {\r\n                var e = this._time - this._delayTime;// this.moveTime;\r\n                var d = this._maxWidth * e / this.moveTime;\r\n                this.hpAlpha.width = this._startWidth - d;\r\n            }\r\n        }\r\n    },\r\n});\r\n"
  ]
}
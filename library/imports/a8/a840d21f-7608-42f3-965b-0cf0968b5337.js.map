{
  "version": 3,
  "sources": [
    "unknown"
  ],
  "names": [],
  "mappings": "AAAA,IAAM,QAAQ,GAAG,OAAO,CAAC,WAAW,CAAC,CAAC;AACtC,IAAM,KAAK,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC;;AAE/B,MAAM,CAAC,OAAO,SAAM,GAAG,EAAE,CAAC,KAAK,CAAC;AAC5B,QAAI,EAAE,gBAAY;AACd,YAAI,CAAC,WAAW,GAAG,sBAAsB,CAAC;AAC1C,YAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;KAChC;;AAED,iBAAa,EAAE,uBAAU,IAAI,EAAE;AAC3B,YAAI,CAAC,WAAW,GAAG,IAAI,CAAC;KAC3B;;AAED,sBAAkB,EAAE,4BAAU,QAAQ,EAAE;AACpC,YAAI,OAAO,QAAQ,AAAC,KAAK,UAAU,EAC/B,IAAI,CAAC,gBAAgB,GAAG,QAAQ,CAAC;KACxC;;AAED,WAAO,EAAE,iBAAU,GAAG,EAAE,IAAI,EAAE;AAC1B,YAAI,IAAI,GAAG,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC;AACvD,YAAI,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;AACpD,YAAI,MAAM,GAAG,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;AACzC,cAAM,GAAG,MAAM,CAAC,OAAO,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;AACtC,gBAAQ,CAAC,OAAO,CAAC,GAAG,EAAE,QAAQ,CAAC,MAAM,CAAC,IAAI,EAAE,EAAE,OAAO,EAAE,MAAM,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;KAC7F;;AAED,WAAO,EAAE,iBAAU,KAAK,EAAE,QAAQ,EAAE;AAChC,YAAI,IAAI,CAAC,gBAAgB,EAAE;AACvB,gBAAI,KAAK,IAAI,QAAQ,CAAC,KAAK,CAAC,EAAE,EAAE;AAC5B,oBAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;AAChC,oBAAI,MAAM,GAAG,KAAK,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;AAC9C,oBAAI,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC,MAAM,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;AACtD,oBAAI,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;AAClC,oBAAI,CAAC,gBAAgB,CAAC,KAAK,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC,CAAC;aAC1E,MAAM,IAAI,KAAK,IAAI,QAAQ,CAAC,KAAK,CAAC,IAAI,EAAE;AACrC,oBAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;aAChC;SACJ;KACJ;CACJ,CAAC,CAAC",
  "file": "unknown",
  "sourcesContent": [
    "const HttpUtil = require(\"http_util\");\r\nconst XXTEA = require(\"xxtea\");\r\n\r\nmodule.exports.class = cc.Class({\r\n    ctor: function () {\r\n        this._cipherCode = 'q1w2e3r4t5y6u7i8o9p0';\r\n        this._respondCallback = null;\r\n    },\r\n    \r\n    setCipherCode: function (code) {\r\n        this._cipherCode = code;  \r\n    },\r\n    \r\n    setRespondCallback: function (callback) {\r\n        if (typeof(callback) === 'function')\r\n            this._respondCallback = callback;\r\n    },\r\n    \r\n    request: function (url, data) {\r\n        var json = XXTEA.utf16to8(JSON.stringify(data).trim());\r\n        var encrypt = XXTEA.encrypt(json, this._cipherCode);\r\n        var encode = XXTEA.base64encode(encrypt);\r\n        encode = encode.replace(/\\+/g, '%2B');\r\n        HttpUtil.request(url, HttpUtil.Method.POST, { msgData: encode }, this.respond.bind(this));\r\n    },\r\n    \r\n    respond: function (stats, response) {\r\n        if (this._respondCallback) {\r\n            if (stats == HttpUtil.Stats.OK) {\r\n                var json = JSON.parse(response);\r\n                var decode = XXTEA.base64decode(json.msgData);\r\n                var decrypt = XXTEA.decrypt(decode, this._cipherCode);\r\n                var content = JSON.parse(decrypt);\r\n                this._respondCallback(stats, { code: json.ResultCode, data: content });\r\n            } else if (stats == HttpUtil.Stats.FAIL) {\r\n                this._respondCallback(stats);\r\n            }\r\n        }\r\n    },\r\n});\r\n\r\n\r\n\r\n\r\n"
  ]
}
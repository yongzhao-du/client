{
  "version": 3,
  "sources": [
    "unknown"
  ],
  "names": [],
  "mappings": "AAAA,MAAM,CAAC,OAAO,SAAM,GAAG,EAAE,CAAC,KAAK,CAAC;;AAE5B,QAAI,EAAE,gBAAY;AACd,YAAI,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC;AAClB,YAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;AACnB,YAAI,CAAC,MAAM,GAAG,EAAE,CAAC;KACjB;;AAED,cAAU,EAAE,sBAAY;AACvB,YAAI,GAAG,GAAG,CAAC,CAAC;AACZ,YAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE;AAC1B,eAAG,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC;SAC7B,MAAM;AACN,eAAG,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC;SAClB;AACD,eAAO,GAAG,CAAA;KACV;;AAED,UAAM,EAAE,gBAAU,GAAG,EAAE;AACtB,YAAI,GAAG,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC;AAC5B,YAAI,GAAG,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE;AAC3B,eAAG,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAA;AACxB,gBAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;SACzB,MAAM;AACH,gBAAI,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC;SAC1B;AACD,eAAO,GAAG,CAAA;KACV;;AAED,iBAAa,EAAE,uBAAU,GAAG,EAAE;AAC1B,YAAI,GAAG,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,EACzB,OAAO,IAAI,CAAC;AAChB,YAAI,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;AAC9B,YAAI,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC;AACxB,YAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AACxB,eAAO,GAAG,CAAA;KACV;;AAED,kBAAc,EAAE,wBAAU,GAAG,EAAE;AAC3B,YAAI,GAAG,KAAK,IAAI,EACZ,OAAO,IAAI,CAAC;AAChB,aAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACzC,gBAAI,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,GAAG,EAAE;AACvB,uBAAO,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;aAChC;SACJ;AACD,eAAO,IAAI,CAAC;KACf;;AAED,aAAS,EAAE,mBAAU,GAAG,EAAE;AACtB,YAAI,GAAG,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,EACzB,OAAO,IAAI,CAAC;AACnB,eAAO,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;KACxB;;AAED,QAAI,EAAE,cAAU,IAAI,EAAE;AACrB,YAAI,OAAO,IAAI,AAAC,KAAK,UAAU,EAC9B,OAAM;;AAEJ,aAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACzC,gBAAI,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,IAAI,EAAE;AACzB,oBAAI,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;aAC3B;SACJ;KACJ;;CAEJ,CAAC,CAAC",
  "file": "unknown",
  "sourcesContent": [
    "module.exports.class = cc.Class({\r\n    \r\n    ctor: function () {\r\n        this._idx = -1;\r\n    \tthis._freeIdx = [];\r\n    \tthis._table = [];\r\n    },\r\n    \r\n    allocIndex: function () {\r\n    \tvar ret = 0;\r\n    \tif (this._freeIdx.length > 0) {\r\n        \tret = this._freeIdx.pop();\r\n    \t} else {\r\n    \t\tret = this._idx++;\r\n    \t}\r\n    \treturn ret\r\n    },\r\n    \r\n    insert: function (obj) {\r\n    \tvar idx = this.allocIndex();\r\n    \tif (idx >= this._table.length) {\r\n    \t    idx = this._table.length\r\n    \t    this._table.push(obj);\r\n    \t} else {\r\n    \t    this._table[idx] = obj;\r\n    \t}\r\n    \treturn idx\r\n    },\r\n    \r\n    removeByIndex: function (idx) {\r\n        if (idx >= this._table.length)\r\n            return null;\r\n        var obj = this._table[idx];\r\n    \tthis._table[idx] = null;\r\n    \tthis._freeIdx.push(idx);\r\n    \treturn obj\r\n    },\r\n\r\n    removeByObject: function (obj) {\r\n        if (obj === null)\r\n            return null;\r\n        for (var i = 0; i < this._table.length; i++) {\r\n            if (this._table[i] == obj) {\r\n                return this.removeByIndex(i);\r\n            }\r\n        }\r\n        return null;\r\n    },\r\n    \r\n    getObject: function (idx) {\r\n        if (idx >= this._table.length)\r\n            return null;\r\n\t    return this._table[idx];\r\n    },\r\n\r\n    each: function (func) {\r\n    \tif (typeof(func) !== 'function')\r\n    \t\treturn\r\n    \r\n        for (var i = 0; i < this._table.length; i++) {\r\n            if (this._table[i] !== null) {\r\n                func(i, this._table[i]);\r\n            }\r\n        }\r\n    }\r\n    \r\n});\r\n"
  ]
}
{
  "version": 3,
  "sources": [
    "unknown"
  ],
  "names": [],
  "mappings": "AAAA,MAAM,CAAC,OAAO,SAAM,GAAG,EAAE,CAAC,KAAK,CAAC;;;AAG5B,QAAI,EAAE,gBAAY;AACd,YAAI,CAAC,UAAU,GAAG,EAAE,CAAC;KACxB;;AAED,QAAI,EAAE,cAAU,SAAS,EAAE,IAAI,EAAE;AAC7B,YAAI,QAAQ,GAAG,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;AAC1C,YAAI,QAAQ,EAAE;AACV,iBAAK,IAAI,CAAC,IAAI,QAAQ,EAAE;AACpB,wBAAQ,CAAC,CAAC,CAAC,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;aAChC;SACJ;KACJ;;AAED,mBAAe,EAAE,yBAAU,SAAS,EAAE,OAAO,EAAE;AAC3C,YAAI,OAAO,OAAO,AAAC,KAAK,UAAU,EAC9B,OAAO;;AAEX,YAAI,QAAQ,GAAG,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;AAC1C,YAAI,QAAQ,EAAE;AACV,iBAAK,IAAI,CAAC,IAAI,QAAQ,EAAE;AACpB,oBAAI,QAAQ,CAAC,CAAC,CAAC,IAAI,OAAO,EACtB,OAAO;aACd;SACJ;;AAED,YAAI,CAAC,QAAQ,EAAE;AACX,oBAAQ,GAAG,EAAE,CAAC;AACd,gBAAI,CAAC,UAAU,CAAC,SAAS,CAAC,GAAG,QAAQ,CAAC;SACzC;;AAED,gBAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;;AAEvB,eAAO,EAAE,IAAI,EAAE,SAAS,EAAE,EAAE,EAAE,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;KACvD;;AAED,sBAAkB,EAAE,4BAAU,KAAK,EAAE;AACjC,YAAI,QAAQ,GAAG,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;AAC3C,YAAI,QAAQ,IAAI,KAAK,CAAC,EAAE,IAAI,CAAC,IAAI,KAAK,CAAC,EAAE,GAAG,QAAQ,CAAC,MAAM,EACvD,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;KACpC;;AAED,yBAAqB,EAAE,+BAAU,SAAS,EAAE;AACxC,YAAI,CAAC,UAAU,CAAC,SAAS,CAAC,GAAG,IAAI,CAAC;KACrC;;AAED,SAAK,EAAE,iBAAY;AACf,YAAI,CAAC,UAAU,GAAG,EAAE,CAAC;KACxB;CACJ,CAAC,CAAC",
  "file": "unknown",
  "sourcesContent": [
    "module.exports.class = cc.Class({\r\n\r\n    // use this for initialization\r\n    ctor: function () {\r\n        this._listeners = {};\r\n    },\r\n    \r\n    emit: function (eventType, data) {\r\n        var handlers = this._listeners[eventType];\r\n        if (handlers) {\r\n            for (var k in handlers) {\r\n                handlers[k](eventType, data);\r\n            }\r\n        }\r\n    },\r\n    \r\n    addEventHandler: function (eventType, handler) {\r\n        if (typeof(handler) !== 'function')\r\n            return;\r\n            \r\n        var handlers = this._listeners[eventType];\r\n        if (handlers) {\r\n            for (var k in handlers) {\r\n                if (handlers[k] == handler)\r\n                    return;\r\n            }\r\n        }\r\n        \r\n        if (!handlers) {\r\n            handlers = [];\r\n            this._listeners[eventType] = handlers;\r\n        }\r\n        \r\n        handlers.push(handler);\r\n        \r\n        return { type: eventType, id: handlers.length - 1 };\r\n    },\r\n    \r\n    removeEventHandler: function (enity) {\r\n        var handlers = this._listeners[enity.type];\r\n        if (handlers && enity.id >= 0 && enity.id < handlers.length)\r\n            handlers.splice(enity.id, 1);\r\n    },\r\n    \r\n    removeAllEventHandler: function (eventType) {\r\n        this._listeners[eventType] = null;\r\n    },\r\n    \r\n    clear: function () {\r\n        this._listeners = {};\r\n    }\r\n});\r\n"
  ]
}